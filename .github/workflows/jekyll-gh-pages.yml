# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Build Angular App
        run: |
          npm install
          npm run build -- --configuration production --base-href "/skillbuilder/"

      # Step 4: Set up Ruby for Jekyll
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4.1'

      # Step 5: Install Jekyll dependencies
      - name: Install Jekyll dependencies
        run: bundle install
        
      - name: Replace Secrets
        run: |
              # Replace secrets in Angular build files
              sed -i 's/{{API_URL}}/${{ vars.API_URL }}/g' $(find dist/your-angular-project -type f -name '*.js' -or -name '*.html')
              # Replace secrets in Jekyll files
              sed -i 's/{{ACCESSPASSWORD}}/${{ secrets.ACCESSPASSWORD }}/g' $(find . -type f -name '*.html' -or -name '*.md')        
              
      # Step 7: Copy Angular build files into Jekyll's site directory
      - name: Integrate Angular into Jekyll
        run: cp -r dist/your-angular-project/* _site/angular-app/
      # Step 8: Build Jekyll site
      - name: Build Jekyll Site
        run: bundle exec jekyll build

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
